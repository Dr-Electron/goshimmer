name: Test GoShimmer
on:
  push:
  pull_request:
    types: [opened, reopened]
jobs:

  build:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Run Tests
      run: go test ./...

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build GoShimmer Docker network
      run: docker-compose -f tools/integration-tests/docker-compose.yml up -d --scale peer_replica=5

    - name: Dispay containers
      run: docker ps -a

    - name: Run integration tests
      run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --exit-code-from tester

    - name: Stop GoShimmer Docker network
      if: always()
      run: docker-compose -f tools/integration-tests/docker-compose.yml stop

    - name: Create logs from containers in network
      if: always()
      run: |
        docker logs entry_node > tools/integration-tests/logs/entry_node.log
        docker logs peer_master > tools/integration-tests/logs/peer_master.log
        docker logs integration-tests_peer_replica_1 > tools/integration-tests/logs/peer_replica_1.log
        docker logs integration-tests_peer_replica_2 > tools/integration-tests/logs/peer_replica_2.log
        docker logs integration-tests_peer_replica_3 > tools/integration-tests/logs/peer_replica_3.log
        docker logs integration-tests_peer_replica_4 > tools/integration-tests/logs/peer_replica_4.log
        docker logs integration-tests_peer_replica_5 > tools/integration-tests/logs/peer_replica_5.log
        docker logs tester > tools/integration-tests/logs/tester.log

    - name: Save logs as artifacts
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: container-logs
        path: tools/integration-tests/logs

    - name: Clean up
      if: always()
      run: docker-compose -f tools/integration-tests/docker-compose.yml down --rmi all --remove-orphan --volumes
